// persistentStateUiLogic definition
    function persistentStateUiLogic(RED, node) {
        $("#node-input-storestate").on("change", function () {
            var value = $(this).prop("checked");
            if (value) {
                $("#node-storestate-select").show();
            } else {
                $("#node-storestate-select").hide();
            }
        })
        $('#node-input-store').typedInput({
            default: 'node',
            typeField: $("#node-input-storeType"),
            types: ['flow','global']
        });
   }
// persistentStateUiLogic definition
 
// defaults
            storestate: {value: false},
            store: {value: "", validate: (RED.validators.hasOwnProperty('typedInput')?RED.validators.typedInput('storeType'):function(v) { return true})},
            storeType: {value: 'flow'},
// defaults

// persistentStateUiLogic instantiation
            persistentStateUiLogic(RED, this);
// persistentStateUiLogic instantiation

// UI
    <div class="form-row">
        <label style="width:auto" for="node-input-storestate"><i class="fa fa-database"></i> Save and restore state from persistent context: </label>
        <input type="checkbox" id="node-input-storestate" style="display:inline-block; width:auto; vertical-align:top;">
    </div>
    <div class="form-row" id="node-storestate-select">
        <label for="node-input-store" style="padding-left:25px; margin-right:-25px">Location</label>
        <input type="text" id="node-input-store" style="width:70%">
        <input type="hidden" id="node-input-storeType">
    </div>
// UI